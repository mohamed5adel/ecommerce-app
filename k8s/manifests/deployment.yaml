apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-demo-app
  labels:
    app: devops-demo-app
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: devops-demo-app
  template:
    metadata:
      labels:
        app: devops-demo-app
        version: v1
    spec:
      containers:
      - name: app
        image: devops-demo-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: db_port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db_password
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: false
      restartPolicy: Always

